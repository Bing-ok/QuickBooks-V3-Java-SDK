//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.05.28 at 10:35:45 AM PDT 
//


package com.intuit.ipp.data;

import java.io.Serializable;
import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Financial transaction representing recording of a Credit Card balance payment.
 * 			
 * 
 * <p>Java class for CreditCardPaymentTxn complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CreditCardPaymentTxn"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://schema.intuit.com/finance/v3}Transaction"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="CreditCardAccountRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="BankAccountRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/&gt;
 *         &lt;element name="Amount" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="CreditCardPaymentEx" type="{http://schema.intuit.com/finance/v3}IntuitAnyType"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CreditCardPaymentTxn", propOrder = {
    "creditCardAccountRef",
    "bankAccountRef",
    "amount",
    "creditCardPaymentEx"
})
public class CreditCardPaymentTxn
    extends Transaction
    implements Serializable, Equals2, HashCode2
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "CreditCardAccountRef")
    protected ReferenceType creditCardAccountRef;
    @XmlElement(name = "BankAccountRef")
    protected ReferenceType bankAccountRef;
    @XmlElement(name = "Amount")
    protected BigDecimal amount;
    @XmlElement(name = "CreditCardPaymentEx", required = true)
    protected IntuitAnyType creditCardPaymentEx;

    /**
     * Gets the value of the creditCardAccountRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getCreditCardAccountRef() {
        return creditCardAccountRef;
    }

    /**
     * Sets the value of the creditCardAccountRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setCreditCardAccountRef(ReferenceType value) {
        this.creditCardAccountRef = value;
    }

    /**
     * Gets the value of the bankAccountRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getBankAccountRef() {
        return bankAccountRef;
    }

    /**
     * Sets the value of the bankAccountRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setBankAccountRef(ReferenceType value) {
        this.bankAccountRef = value;
    }

    /**
     * Gets the value of the amount property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getAmount() {
        return amount;
    }

    /**
     * Sets the value of the amount property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setAmount(BigDecimal value) {
        this.amount = value;
    }

    /**
     * Gets the value of the creditCardPaymentEx property.
     * 
     * @return
     *     possible object is
     *     {@link IntuitAnyType }
     *     
     */
    public IntuitAnyType getCreditCardPaymentEx() {
        return creditCardPaymentEx;
    }

    /**
     * Sets the value of the creditCardPaymentEx property.
     * 
     * @param value
     *     allowed object is
     *     {@link IntuitAnyType }
     *     
     */
    public void setCreditCardPaymentEx(IntuitAnyType value) {
        this.creditCardPaymentEx = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final CreditCardPaymentTxn that = ((CreditCardPaymentTxn) object);
        {
            ReferenceType lhsCreditCardAccountRef;
            lhsCreditCardAccountRef = this.getCreditCardAccountRef();
            ReferenceType rhsCreditCardAccountRef;
            rhsCreditCardAccountRef = that.getCreditCardAccountRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "creditCardAccountRef", lhsCreditCardAccountRef), LocatorUtils.property(thatLocator, "creditCardAccountRef", rhsCreditCardAccountRef), lhsCreditCardAccountRef, rhsCreditCardAccountRef, (this.creditCardAccountRef!= null), (that.creditCardAccountRef!= null))) {
                return false;
            }
        }
        {
            ReferenceType lhsBankAccountRef;
            lhsBankAccountRef = this.getBankAccountRef();
            ReferenceType rhsBankAccountRef;
            rhsBankAccountRef = that.getBankAccountRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bankAccountRef", lhsBankAccountRef), LocatorUtils.property(thatLocator, "bankAccountRef", rhsBankAccountRef), lhsBankAccountRef, rhsBankAccountRef, (this.bankAccountRef!= null), (that.bankAccountRef!= null))) {
                return false;
            }
        }
        {
            BigDecimal lhsAmount;
            lhsAmount = this.getAmount();
            BigDecimal rhsAmount;
            rhsAmount = that.getAmount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "amount", lhsAmount), LocatorUtils.property(thatLocator, "amount", rhsAmount), lhsAmount, rhsAmount, (this.amount!= null), (that.amount!= null))) {
                return false;
            }
        }
        {
            IntuitAnyType lhsCreditCardPaymentEx;
            lhsCreditCardPaymentEx = this.getCreditCardPaymentEx();
            IntuitAnyType rhsCreditCardPaymentEx;
            rhsCreditCardPaymentEx = that.getCreditCardPaymentEx();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "creditCardPaymentEx", lhsCreditCardPaymentEx), LocatorUtils.property(thatLocator, "creditCardPaymentEx", rhsCreditCardPaymentEx), lhsCreditCardPaymentEx, rhsCreditCardPaymentEx, (this.creditCardPaymentEx!= null), (that.creditCardPaymentEx!= null))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            ReferenceType theCreditCardAccountRef;
            theCreditCardAccountRef = this.getCreditCardAccountRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "creditCardAccountRef", theCreditCardAccountRef), currentHashCode, theCreditCardAccountRef, (this.creditCardAccountRef!= null));
        }
        {
            ReferenceType theBankAccountRef;
            theBankAccountRef = this.getBankAccountRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bankAccountRef", theBankAccountRef), currentHashCode, theBankAccountRef, (this.bankAccountRef!= null));
        }
        {
            BigDecimal theAmount;
            theAmount = this.getAmount();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "amount", theAmount), currentHashCode, theAmount, (this.amount!= null));
        }
        {
            IntuitAnyType theCreditCardPaymentEx;
            theCreditCardPaymentEx = this.getCreditCardPaymentEx();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "creditCardPaymentEx", theCreditCardPaymentEx), currentHashCode, theCreditCardPaymentEx, (this.creditCardPaymentEx!= null));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
